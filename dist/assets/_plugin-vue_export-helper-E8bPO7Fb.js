import{a as s,S as u,U as i,b as h,V as p,H as f}from"./index-Bx8xlAef.js";function y(e){const o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";return crypto.getRandomValues(new Uint8Array(e)).reduce((a,n)=>a+o[n%o.length],"")}function w(e){const t=new TextEncoder().encode(e);return window.crypto.subtle.digest("SHA-256",t)}function m(e){return btoa(String.fromCharCode(...new Uint8Array(e))).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}const g="https://api.spotify.com/v1";async function c(e,o,t=!0){const a=e.startsWith("http")?e:g+e,r=await(await fetch(a,{headers:{Accept:"application/json",Authorization:`Bearer ${s.value}`,"Content-Type":"application/json"},...o})).json();if(r.error){if(r.error.message==="The access token expired"){if(t)return await v(),c(e,o,!1);s.value=""}throw alert(`Error: ${r.error.message}`),await u.push({name:"landing"}),new Error(r.error.message)}return r}async function k(e,o){let t=await c(e,o);const a=t.items;for(;t.next;)t=await c(t.next),a.push(...t.items);return a}const d="b28f8580eecf4b3aa9bd0c1a59fde6c8",l=_();function _(){const e=new URL(window.location.href);return e.search="",e.hash="",e.toString()}async function U(){p.value=y(64);const e=await w(p.value),o=m(e),t=["user-read-private","user-read-email","playlist-read-private","playlist-modify-private","playlist-modify-public","user-read-currently-playing","user-read-playback-state"].join(" "),a=new URL("https://accounts.spotify.com/authorize"),n={client_id:d,code_challenge:o,code_challenge_method:"S256",redirect_uri:l,response_type:"code",scope:t};a.search=new URLSearchParams(n).toString(),window.location.href=a.toString()}async function S(){const e=new URL("https://accounts.spotify.com/api/token"),o={body:new URLSearchParams({client_id:d,code:h.value,code_verifier:p.value,grant_type:"authorization_code",redirect_uri:l}),headers:{"Content-Type":"application/x-www-form-urlencoded"},method:"POST"},a=await(await fetch(e,o)).json();s.value=a.access_token,i.value=a.refresh_token,f.value=(await c("/me")).id}async function v(){const e=new URL("https://accounts.spotify.com/api/token"),o={body:new URLSearchParams({client_id:d,grant_type:"refresh_token",refresh_token:i.value}),headers:{"Content-Type":"application/x-www-form-urlencoded"},method:"POST"},a=await(await fetch(e,o)).json();s.value=a.access_token,i.value=a.refresh_token}const R=(e,o)=>{const t=e.__vccOpts||e;for(const[a,n]of o)t[a]=n;return t};export{R as _,k as a,S as g,U as r,c as s};
