import{a as s,W as u,X as i,Y as p,b as h,D as f}from"./index-DSzLFWiH.js";function w(e){const a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";return crypto.getRandomValues(new Uint8Array(e)).reduce((o,r)=>o+a[r%a.length],"")}function y(e){const t=new TextEncoder().encode(e);return window.crypto.subtle.digest("SHA-256",t)}function m(e){return btoa(String.fromCharCode(...new Uint8Array(e))).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}const g="https://api.spotify.com/v1";async function c(e,a,t=!0){const o=e.startsWith("http")?e:g+e,n=await(await fetch(o,{headers:{Accept:"application/json",Authorization:`Bearer ${s.value}`,"Content-Type":"application/json"},...a})).json();if(n.error){if(n.error.message==="The access token expired"){if(t)return await v(),c(e,a,!1);s.value=""}throw n.error.status===403?new Error("Unknown error"):(alert(`Error: ${n.error.message}`),await u.push({name:"landing"}),new Error(n.error.message))}return n}async function b(e,a){let t=await c(e,a);const o=t.items;for(;t.next;)t=await c(t.next),o.push(...t.items);return o}const d="b28f8580eecf4b3aa9bd0c1a59fde6c8",l=_();function _(){const e=new URL(window.location.href);return e.search="",e.hash="",e.toString()}async function U(){p.value=w(64);const e=await y(p.value),a=m(e),t=["user-read-private","user-read-email","playlist-read-private","playlist-modify-private","playlist-modify-public","user-read-currently-playing","user-read-playback-state"].join(" "),o=new URL("https://accounts.spotify.com/authorize"),r={client_id:d,code_challenge:a,code_challenge_method:"S256",redirect_uri:l,response_type:"code",scope:t};o.search=new URLSearchParams(r).toString(),window.location.href=o.toString()}async function S(){const e=new URL("https://accounts.spotify.com/api/token"),a={body:new URLSearchParams({client_id:d,code:h.value,code_verifier:p.value,grant_type:"authorization_code",redirect_uri:l}),headers:{"Content-Type":"application/x-www-form-urlencoded"},method:"POST"},o=await(await fetch(e,a)).json();s.value=o.access_token,i.value=o.refresh_token,f.value=(await c("/me")).id}async function v(){const e=new URL("https://accounts.spotify.com/api/token"),a={body:new URLSearchParams({client_id:d,grant_type:"refresh_token",refresh_token:i.value}),headers:{"Content-Type":"application/x-www-form-urlencoded"},method:"POST"},o=await(await fetch(e,a)).json();s.value=o.access_token,i.value=o.refresh_token}const R=(e,a)=>{const t=e.__vccOpts||e;for(const[o,r]of a)t[o]=r;return t};export{R as _,c as a,S as g,U as r,b as s};
